{"version":3,"sources":["assets/img/unavailable.png","components/Cover-Text/cover-text.component.jsx","components/Cover/cover.component.jsx","components/Navbar/navbar.component.jsx","components/Recipe/recipe.component.jsx","components/FoodData/foodData.component.jsx","components/Pagination/pagination.component.jsx","components/Pagination/pagination-food.component.jsx","components/Search-Card/search-card.component.jsx","components/Footer/footer.component.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","CoverText","className","Cover","onClick","document","getElementById","scrollIntoView","behavior","icon","faChevronCircleDown","Navbar","faFacebook","faInstagram","faPinterest","faDribbble","Recipe","recipes","loading","style","marginTop","id","onChange","filter","tr","td","i","value","toUpperCase","getElementsByTagName","length","innerHTML","indexOf","display","map","recipe","protein","totalNutrients","PROCNT","quantity","toFixed","carbs","CHOCDF","fats","FAT","total","label","key","url","data-column","src","image","UnavailableImg","alt","yield","calories","width","listStyle","paddingLeft","FoodData","foodData","food","nutrients","foodId","ENERC_KCAL","Pagination","itemsPerPage","totalItems","paginate","pageNumbers","Math","ceil","push","number","PaginationFood","paginateFood","SearchCard","useState","setRecipes","setFoodData","setLoading","currentPage","setCurrentPage","currentPageFood","setCurrentPageFood","search","setSearch","query","setQuery","currentRecipeItems","setCurrentRecipeItems","currentFoodDataItems","setCurrentFoodDataItems","recipeUrl","foodDataUrl","indexofLastRecipe","indexOfFirstRecipe","indexofLastFood","indexOfFirstFood","useEffect","getFoodData","slice","getRecipes","a","fetch","response","json","data","hits","hints","role","aria-label","onSubmit","e","preventDefault","placeholder","required","target","type","pageNumber","color","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.97b74a76.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/unavailable.3e8e998a.png\";","import React from \"react\";\nimport \"./cover-text.styles.css\";\n\nconst CoverText = () => {\n    return (\n        <div className=\"cover-text\">\n            <h3 className=\"heading-text\">Discover a Unique Experience</h3>\n            <p className=\"para-text\">We bring you the wide collection of delicious and enchanting food recipes that too on the cost of few clicks!!</p>\n        </div>\n    );\n}\n\nexport default CoverText;","import React from \"react\";\nimport \"./cover.styles.css\";\nimport CoverText from \"../Cover-Text/cover-text.component\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronCircleDown } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Cover = () => {\n    return (\n      <div className=\"cover\">\n        <CoverText />\n        <FontAwesomeIcon\n          onClick={() =>\n            document.getElementById(\"search-card\").scrollIntoView({\n              behavior: \"smooth\",\n            })\n          }\n          icon={faChevronCircleDown}\n          className=\"arrow-down\"\n        />\n      </div>\n    );\n}\n\nexport default Cover;","import React from \"react\";\nimport \"./navbar.styles.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faFacebook,\n  faInstagram,\n  faPinterest,\n  faDribbble,\n} from \"@fortawesome/free-brands-svg-icons\";\n\nconst Navbar = () => {\n  return (\n    <nav className=\"sticky-nav\">\n      <h3 className=\"brand-name\">EatUp ✔</h3>\n      <ul className=\"main-nav\">\n        <li>\n          <FontAwesomeIcon icon={faFacebook} />\n        </li>\n        <li>\n          <FontAwesomeIcon icon={faInstagram} />\n        </li>\n        <li>\n          <FontAwesomeIcon icon={faPinterest} />\n        </li>\n        <li>\n          <FontAwesomeIcon icon={faDribbble} />\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\nimport \"./recipe.styles.css\";\nimport UnavailableImg from \"../../assets/img/unavailable.png\";\n\nconst Recipe = ({recipes, loading}) => {\n\n    const recipeFilter = () => {\n      var input, filter, table, tr, td, i;\n      input = document.getElementById(\"recipe-filter\");\n      filter = input.value.toUpperCase();\n      table = document.getElementById(\"recipe-table\");\n      tr = table.getElementsByTagName(\"tr\");\n      for (i = 0; i < tr.length; i++) {\n        td = tr[i].getElementsByTagName(\"td\")[5];\n        if (td) {\n          if (td.innerHTML.toUpperCase().indexOf(filter) > -1) {\n            tr[i].style.display = \"\";\n          } else {\n            tr[i].style.display = \"none\";\n          }\n        }       \n      }\n    }\n\n    if(loading){\n        return <h3 style={{ marginTop: \"50px\" }}>Loading...</h3>;\n    }\n    return (\n      <div className=\"recipe-table-div\">\n        <h2>Recipe Database</h2>\n        <select id=\"recipe-filter\" onChange={recipeFilter} className=\"select-form-control\">\n          <option>High Protein</option>\n          <option>Balanced</option>\n          <option>High Carb</option>\n          <option>Regular</option>\n        </select>\n        <table id=\"recipe-table\">\n          <thead>\n            <tr>\n              <th>Title</th>\n              <th>Image</th>\n              <th>Qty.</th>\n              <th>Energy</th>\n              <th>Nutrients</th>\n              <th>Label</th>\n            </tr>\n          </thead>\n          <tbody>\n            {recipes.map((recipe) => {\n              const protein = recipe.recipe.totalNutrients.PROCNT.quantity.toFixed(\n                2\n              );\n              const carbs = recipe.recipe.totalNutrients.CHOCDF.quantity.toFixed(\n                2\n              );\n              const fats = recipe.recipe.totalNutrients.FAT.quantity.toFixed(2);\n              const total = protein + fats + carbs;\n              let label = \"\";\n              if (protein / total > 15) {\n                label = \"High Protein\";\n              } else if (protein / total >= 12 && protein / total <= 15) {\n                label = \"Balanced\";\n              } else if ((carbs + fats) / total > 50) {\n                label = \"High Carb\";\n              } else {\n                label = \"Regular\";\n              }\n              return (\n                <tr key={recipe.recipe.url}>\n                  <td data-column=\"Title\">{recipe.recipe.label}</td>\n                  <td data-column=\"Image\">\n                    <img\n                      src={\n                        recipe.recipe.image\n                          ? recipe.recipe.image\n                          : UnavailableImg\n                      }\n                      alt=\"\"\n                      className=\"recipe-image\"\n                    />\n                  </td>\n                  <td data-column=\"Qty.\">{recipe.recipe.yield}</td>\n                  <td data-column=\"Energy\">\n                    {recipe.recipe.calories.toFixed(2)} kcal\n                  </td>\n                  <td data-column=\"Nutrients\" style={{ width: \"22%\" }}>\n                    <ul style={{ listStyle: \"none\", paddingLeft: \"15px\" }}>\n                      <li>\n                        Protien:{\" \"}\n                        {recipe.recipe.totalNutrients.PROCNT.quantity.toFixed(\n                          2\n                        )}\n                        g\n                      </li>\n                      <li>\n                        Carbs:{\" \"}\n                        {recipe.recipe.totalNutrients.CHOCDF.quantity.toFixed(\n                          2\n                        )}\n                        g\n                      </li>\n                      <li>\n                        Fats:{\" \"}\n                        {recipe.recipe.totalNutrients.FAT.quantity.toFixed(2)}g\n                      </li>\n                    </ul>\n                  </td>\n                  <td>{label}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    );\n}\n\nexport default Recipe;\n","import React from \"react\";\nimport \"./foodData.styles.css\";\nimport UnavailableImg from \"../../assets/img/unavailable.png\";\n\nconst FoodData = ({ foodData, loading }) => {\n\n  const foodDataFilter = () => {\n    var input,\n      filter,\n      table,\n      tr,\n      td,\n      i;\n    input = document.getElementById(\"foodData-filter\");\n    filter = input.value.toUpperCase();\n    table = document.getElementById(\"foodData-table\");\n    tr = table.getElementsByTagName(\"tr\");\n    for (i = 0; i < tr.length; i++) {\n      td = tr[i].getElementsByTagName(\"td\")[4];\n      if (td) {\n        if (td.innerHTML.toUpperCase().indexOf(filter) > -1) {\n          tr[i].style.display = \"\";\n        } else {\n          tr[i].style.display = \"none\";\n        }\n      }\n    }\n  };\n\n  if (loading) {\n    return <h3 style={{ marginTop: \"50px\" }}>Loading...</h3>;\n  }\n  return (\n    <div className=\"foodData-table-div\">\n      <h2>Food Database</h2>\n      <select\n        id=\"foodData-filter\"\n        onChange={foodDataFilter}\n        className=\"select-form-control\"\n      >\n        <option>High Protein</option>\n        <option>Balanced</option>\n        <option>High Carb</option>\n        <option>Regular</option>\n      </select>\n      <table id=\"foodData-table\">\n        <thead>\n          <tr>\n            <th>Title</th>\n            <th>Image</th>\n            <th>Energy</th>\n            <th>Nutrients</th>\n            <th>Label</th>\n          </tr>\n        </thead>\n        <tbody>\n          {foodData.map((food) => {\n            const protein = food.food.nutrients.PROCNT.toFixed(2);\n            const carbs = food.food.nutrients.CHOCDF.toFixed(2);\n            const fats = food.food.nutrients.FAT.toFixed(2);\n            const total = protein + fats + carbs;\n            let label = \"\";\n            if (protein / total > 15) {\n              label = \"High Protein\";\n            } else if (protein / total >= 12 && protein / total <= 15) {\n              label = \"Balanced\";\n            } else if ((carbs + fats) / total > 50) {\n              label = \"High Carb\";\n            } else {\n              label = \"Regular\";\n            }\n            return (\n              <tr key={food.food.foodId}>\n                <td data-column=\"Title\">{food.food.label}</td>\n                <td data-column=\"Image\">\n                  <img\n                    src={food.food.image ? food.food.image : UnavailableImg}\n                    alt=\"\"\n                    className=\"food-image\"\n                  />\n                </td>\n                <td data-column=\"Energy\">\n                  {food.food.nutrients.ENERC_KCAL.toFixed(2)} kcal\n                </td>\n                <td data-column=\"Nutrients\" style={{ width: \"22%\" }}>\n                  <ul style={{ listStyle: \"none\", paddingLeft: \"15px\" }}>\n                    <li>Protien: {protein}g</li>\n                    <li>Carbs: {carbs}g</li>\n                    <li>Fats: {fats}g</li>\n                  </ul>\n                </td>\n                <td>{label}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default FoodData;\n","import React from 'react'\nimport \"./pagination.styles.css\";\n\nconst Pagination = ({ itemsPerPage, totalItems, paginate }) => {\n    const pageNumbers = [];\n    \n    for(let i=1; i <= Math.ceil(totalItems / itemsPerPage); i++){\n        pageNumbers.push(i);\n    }\n\n    return (\n        <nav className=\"pagination-nav\">\n            <ul className=\"pagination\">\n            {\n                pageNumbers.map(number => (\n                    <li key={number} className=\"page-item\">\n                        <a onClick={() => paginate(number)} className=\"page-link\">\n                            {number}\n                        </a>\n                    </li>\n                ))\n            }\n            </ul>\n        </nav>\n    )\n}\n\nexport default Pagination;\n","import React from \"react\";\nimport \"./pagination.styles.css\";\n\nconst PaginationFood = ({ itemsPerPage, totalItems, paginateFood }) => {\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(totalItems / itemsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  return (\n    <nav className=\"pagination-nav\">\n      <ul className=\"pagination\">\n        {pageNumbers.map((number) => (\n          <li key={number} className=\"page-item\">\n            <a onClick={() => paginateFood(number)} className=\"page-link\">\n              {number}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nexport default PaginationFood;\n","import React,{ useState, useEffect } from \"react\";\nimport \"./search-card.styles.css\";\nimport Recipe from \"../Recipe/recipe.component\";\nimport FoodData from \"../FoodData/foodData.component\";\nimport Pagination from \"../Pagination/pagination.component\";\nimport PaginationFood from \"../Pagination/pagination-food.component\";\n\nconst SearchCard = () => {\n\n    const recipe_app_id = \"aeac802a\";\n    const recipe_app_key = \"bad9a6e0eaed49f24e44e1582cb2cef6\";\n    const food_app_id = \"94e02b3f\";\n    const food_app_key = \"1ece35194048f6f22f5d30db37b69a40\";\n\n    const [recipes, setRecipes] = useState([]);\n    const [foodData, setFoodData] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [currentPageFood, setCurrentPageFood] = useState(1);\n    const [itemsPerPage] = useState(5);\n    const [search, setSearch] = useState(\"\");\n    const [query, setQuery] = useState(\"\");\n    const [currentRecipeItems,setCurrentRecipeItems] = useState([]);\n    const [currentFoodDataItems, setCurrentFoodDataItems] = useState([]);\n\n    const recipeUrl = `https://api.edamam.com/search?q=${query}&app_id=${recipe_app_id}&app_key=${recipe_app_key}`;\n    const foodDataUrl =`https://api.edamam.com/api/food-database/v2/parser?ingr=${query}&app_id=${food_app_id}&app_key=${food_app_key}`;\n\n    //Get Current Item of Recipe\n    const indexofLastRecipe = currentPage * itemsPerPage;\n    const indexOfFirstRecipe = indexofLastRecipe - itemsPerPage;\n\n    //Get Current Item of Food Database\n    const indexofLastFood = currentPageFood * itemsPerPage;\n    const indexOfFirstFood = indexofLastFood - itemsPerPage;\n\n    useEffect(() => {\n        getFoodData();\n    },[query]);\n\n    useEffect(() => {\n      if(typeof recipes !== \"undefined\"){\n        setCurrentRecipeItems(recipes.slice(indexOfFirstRecipe, indexofLastRecipe));\n      }\n    }, [currentPage,recipes]);\n\n    useEffect(()=>{\n        getRecipes();\n    },[query]);\n\n    useEffect(() => {\n      if (typeof foodData !== \"undefined\") {\n        setCurrentFoodDataItems(\n          foodData.slice(indexOfFirstFood, indexofLastFood)\n        );\n      }\n    }, [currentPageFood,foodData]);\n\n    //Get request for Recipe\n    const getRecipes = async () => {\n        setLoading(true);\n        const response = await fetch(recipeUrl);\n        const data = await response.json();\n        setRecipes(data.hits);\n        setLoading(false);\n    };\n\n    //Get request for Food Database\n    const getFoodData = async () => {\n      setLoading(true);\n      const response = await fetch(foodDataUrl);\n      const data = await response.json();\n      setFoodData(data.hints);\n      setLoading(false);\n    };\n\n    //Input-bar Value Change\n    const handleChange = e => {\n        setSearch(e.target.value);\n    }\n\n    //Form Submit\n    const handleSubmit = e => {\n        e.preventDefault();\n        setQuery(search);\n        setSearch(\"\");\n    }\n\n    //Change Recipe Page\n    const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n    //Change Food Database Page\n    const paginateFood = (pageNumber) => setCurrentPageFood(pageNumber);\n    \n    return (\n      <div id=\"search-card\">\n        <h3 className=\"search-card-title\">\n          Food Cravings? Can't Decide What to Cook?\n        </h3>\n        <p className=\"search-card-text\">\n          Well You're just one search away from a wide range of collection of\n          food recipes as per your choice!!\n          <span role=\"img\" aria-label=\"emoji\">\n            {\" \"}\n            😋\n          </span>\n        </p>\n        <form className=\"search-form\" onSubmit={handleSubmit}>\n          <input\n            className=\"search-bar\"\n            placeholder=\"Type food name\"\n            required\n            value={search}\n            onChange={handleChange}\n          />\n          <button className=\"search-button\" type=\"submit\">\n            Search\n          </button>\n        </form>\n        {!recipes.length ? (\n          <h2 style={{ color: \"rgb(74, 172, 18)\", marginTop: \"70px\" }}>\n            No contents selected yet.....\n          </h2>\n        ) : (\n          <div>\n            <Recipe recipes={currentRecipeItems} loading={loading} />\n            <Pagination\n              itemsPerPage={itemsPerPage}\n              totalItems={recipes.length}\n              paginate={paginate}\n            />\n            <FoodData foodData={currentFoodDataItems} loading={loading} />\n            <PaginationFood\n              itemsPerPage={itemsPerPage}\n              totalItems={foodData.length}\n              paginateFood={paginateFood}\n            />\n          </div>\n        )}\n      </div>\n    );\n}\n\nexport default SearchCard;","import React from \"react\";\nimport \"./footer.styles.css\";\n\nconst Footer = () => {\n  return (\n    <div className=\"footer\">\n      <p>\n        Created with{\" \"}\n        <span role=\"img\" aria-label=\"footer-emoji\">\n          ❤\n        </span>{\" \"}\n        by Vasu Khandelwal\n      </p>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport './App.css';\nimport Cover from \"./components/Cover/cover.component\";\nimport Navbar from \"./components/Navbar/navbar.component\";\nimport SearchCard from \"./components/Search-Card/search-card.component\";\nimport Footer from \"./components/Footer/footer.component\";\n\nconst App = () => {\n\n  return (\n    <div className=\"App\">\n      <Navbar/>\n      <Cover/>\n      <SearchCard/>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        checkValidServiceWorker(swUrl, config);\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}